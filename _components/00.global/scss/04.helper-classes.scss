/* ====================================================== 
    <!-- Helper Classes -->              
/* ====================================================== */

/*
 * 1. Content Block
 * 2. Elements after a floating element will flow around it. 
 * 3. Shadow Effect
 * 4. Smooth Transition Effect
 * 5. Element Floating
 * 6. Element Alignment
 * 7. Truncate String with Ellipsis
 * 8. Vertically or Horizontally Aligned Blocks
 * 9. Specifies Whether To Clip Content
 * 10. Specifies a Default Height
 * 11. Style of Irregular Shape
 * 12. Hidden The Element on Mobile Device
 * 13. Tip Label
 * 14. Image Hover Overlay Effects
 * 15. Position
 * 16. Element Hidden Style
*/


/* 
 ---------------------------
 1. Content Block
 ---------------------------
 */ 
.relative {
    position: relative;
	
}

.relative-inline {
	display: inline-block;
	position: relative;
	
	/* Prevent content overflow */
	max-width: 100%;
	
	/* Behave like most inline-block elements */
	vertical-align: middle;
	
	/*
	 * Force hardware acceleration without creating a new stacking context
	 *    to fix 1px glitch when combined with overlays and transitions in Webkit
	 */
	-webkit-backface-visibility: hidden;
	
	/* Clip child elements */
	&.clip {
	  overflow: hidden;
	}
}



/* 
 ---------------------------
 2. Elements after a floating element will flow around it. 
    Use the "clear" or "clearfix" hack to fix the problem
 ---------------------------
 */ 
.clear {
	clear: both;
	display: block;
	overflow: hidden;
	visibility: hidden;
	width: 0;
	height: 0;
}

.clearfix {
	
	&::before {
		display: table;
		content: "";
		line-height: 0;
	}
	
	&::after {
		display: table;
		content: "";
		line-height: 0;
		clear: both;
	}
}


/* 
 ---------------------------
 3. Shadow Effect
 ---------------------------
 */ 
.outer-shadower {
    @include outer-shadow();
}


/* 
 ---------------------------
 4. Smooth Transition Effect
 ---------------------------
 */ 
.transition {
    @include transition-default();
	
    div {
        &.nav-previous, &.nav-next {
          @include transition-default();
        }
    }
	
    img, 
	a, 
	i, 
	li, 
	span {
        @include transition-default();
    }
}




/* 
 ---------------------------
 5. Element Floating
 ---------------------------
 */ 
.fl {
    float: left;
	
	@media all and (max-width: 768px) {
		&.mobile-none {
			float: none;
		}
	}
}

.fr {
    float: right;
	
	@media all and (max-width: 768px) {
		&.mobile-none {
			float: none;
		}
	}
}


/* 
 ---------------------------
 6. Element Alignment
 ---------------------------
 */ 
.t-r {
    text-align: right;
	
	@media all and (max-width: 768px) {
		&.mobile-center {
			text-align: center;
		}	
	}
}

.t-l {
    text-align: left;
	
	@media all and (max-width: 768px) {
		&.mobile-center {
			text-align: center;
		}
	}
}

.t-c {
    text-align: center;
}


/* 
 ---------------------------
 7. Truncate String with Ellipsis
 ---------------------------
 */ 
.ellipsis {
	@include ellipsis();
}


/* 
 ---------------------------
 8. Vertically or Horizontally Aligned Blocks
 ---------------------------
 */ 
.pos-normal-align, 
.pos-vertical-align {
    position: absolute;
    z-index: 6;
    width: 100%;
}

.pos-normal-align {
    top: 0;
}

.pos-vertical-align {
	/* Vertical Center */
	top: 50%;
	transform: translateY(-50%);
	&.relative {
	    position: relative;
	}
}

@media all and (max-width: 768px) {
	.pos-vertical-align.relative {
		top: 0;
		transform: none;
		padding-top: 1.5rem;
	}
}

.center-vertically {
	display: table;
	width: 100%;
	height: 100%;
	> div {
		display: table-cell;
		vertical-align: middle;
	}
}


/* 
 ---------------------------
 9. Specifies Whether To Clip Content
 ---------------------------
 */ 
.overflow-hidden-x {
    overflow-x: hidden;
}

.overflow-hidden {
    overflow: hidden;
}



/* 
 ---------------------------
 10. Specifies a Default Height
 ---------------------------
 */ 
.height-10 {
    height: 10vh !important;
}

.height-20 {
    height: 20vh !important;
}

.height-30 {
    height: 30vh !important;
}

.height-40 {
    height: 40vh !important;
}

.height-50 {
    height: 50vh !important;
}

.height-60 {
    height: 60vh !important;
}

.height-70 {
    height: 70vh !important;
}

.height-80 {
    height: 80vh !important;
}

.height-90 {
    height: 90vh !important;
}

.height-100 {
    height: 100vh !important;
}

@media all and (max-width: 768px) {
	.height-100:not(.mobile-still), 
	.height-90:not(.mobile-still), 
	.height-80:not(.mobile-still), 
	.height-70:not(.mobile-still), 
	.height-60:not(.mobile-still), 
	.height-50:not(.mobile-still), 
	.height-40:not(.mobile-still), 
	.height-30:not(.mobile-still), 
	.height-20:not(.mobile-still), 
	.height-10:not(.mobile-still) {
	    height: auto !important;
		
	}
}

/* 
 ---------------------------
 11. Style of Irregular Shape
 ---------------------------
 */ 
.skew-element {
    transform: skew(0deg, -2deg);	
}


/* 
 ---------------------------
 12. Hidden The Element on Mobile Device
 ---------------------------
 */ 

@media all and (max-width: 768px) {
	.mobile-ele-hide {
		display: none;
	}
	
}

/* 
 ---------------------------
 13. Tip Label
 ---------------------------
 */ 
.tip-label {
	font-weight: 100;
	text-transform: uppercase;
	font-weight: 700;
	line-height: 1.2;
	background: $highlight-color1;
	border-radius: 10px;
	padding: .1rem .3rem !important;
	margin-left: .5rem;
	font-size: 0.625rem;
	vertical-align: middle;
	color: #fff !important;
	position: absolute;
	right: 2.3rem;
	top: .5rem;
	transform: scale(.7);
}

@media all and (max-width: 768px) {
	.tip-label {
		right: 1rem;
		top: .7rem;
	}

}

/* 
 ---------------------------
 14. Image Hover Overlay Effects
 ---------------------------
 */ 
img.imghover-color,
.imghover-color img {
	transition: filter .3s cubic-bezier(.445,.05,.55,.95);
    will-change: filter;
	
	&:hover {
		filter: brightness(120%) hue-rotate(45deg);
	}
}



/* 
 ---------------------------
 15. Position
 ---------------------------
 */ 
/*--- Directions --- */
[class*='dir-top'],
[class*='dir-bottom'],
[class*='dir-left'],
[class*='dir-right'],
[class*='dir-center'] {
    position: absolute !important;
}


/* Don't use `width: 100%` because it is wrong if the parent has padding. */
.dir-top {
	top: 0;
	left: 0;
	right: 0;
}
.dir-bottom {
	bottom: 0;
	left: 0;
	right: 0;
}
.dir-left {
	top: 0;
	bottom: 0;
	left: 0;
}
.dir-right {
	top: 0;
	bottom: 0;
	right: 0;
}

.dir-top-left {
	top: 0;
	left: 0;
}
.dir-top-right {
	top: 0;
	right: 0;
}
.dir-bottom-left {
	bottom: 0;
	left: 0;
}
.dir-bottom-right {
	bottom: 0;
	right: 0;
}


/* 
 ---------------------------
 16. Element Hidden Style
 ---------------------------
 */ 
.el-transparent {
	opacity: 0;
}
.el-zoom {
	transform: scale(0);
}

